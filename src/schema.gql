# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type List {
  id: ID!
  name: String!
  user: User!
}

type User {
  id: ID!
  fullName: String!
  email: String!
  roles: [String!]!
  isActive: Boolean!
  lastUpdateBy: User
  itemsCount: Int!
  itemsSearch(
    """Skip number of items next"""
    offset: Int = 0

    """quantity de items to back"""
    limit: Int = 6

    """parameter for really search"""
    search: String
  ): [Item!]!
  listCount: Int!
  listsSearch(
    """Skip number of items next"""
    offset: Int = 0

    """quantity de items to back"""
    limit: Int = 6

    """parameter for really search"""
    search: String
  ): [List!]!
}

type Item {
  id: ID!
  name: String!
  units: String
  user: User!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  revalidate: AuthResponse!
  users(
    roles: [validRoles!] = []

    """Skip number of items next"""
    offset: Int = 0

    """quantity de items to back"""
    limit: Int = 6

    """parameter for really search"""
    search: String
  ): [User!]!
  UserById(id: ID!): User!

  """Find all items, pagination and search"""
  items(
    """Skip number of items next"""
    offset: Int = 0

    """quantity de items to back"""
    limit: Int = 6

    """parameter for really search"""
    search: String
  ): [Item!]!

  """find items per by id"""
  itemById(id: ID!): Item!
  lists(
    """Skip number of items next"""
    offset: Int = 0

    """quantity de items to back"""
    limit: Int = 6

    """parameter for really search"""
    search: String
  ): [List!]!
  listById(id: ID!): List!
}

"""Roles valid in system"""
enum validRoles {
  admin
  user
  superA
}

type Mutation {
  signup(signupInput: SignUpInput!): AuthResponse!
  login(signinInput: SignInInput!): AuthResponse!
  BlockUser(id: ID!): User!
  UpdateUser(updateUserInput: UpdateUserInput!): User!
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!): Item!
  removeItem(id: ID!): Item!
  ListCreate(createListInput: CreateListInput!): List!
  updateList(updateListInput: UpdateListInput!): List!
  removeList(id: ID!): List!

  """Ejecuta la construccion de base de datos"""
  executeSeed: Boolean!
}

input SignUpInput {
  email: String!
  fullName: String!
  password: String!
}

input SignInInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  email: String
  fullName: String
  password: String
  id: ID!
  roles: [validRoles!]
  isActive: Boolean
}

input CreateItemInput {
  name: String!
  quantityUnits: String
  category: String
}

input UpdateItemInput {
  name: String
  quantityUnits: String
  category: String
  id: ID!
}

input CreateListInput {
  """Example field (placeholder)"""
  name: String!
}

input UpdateListInput {
  """Example field (placeholder)"""
  name: String
  id: ID!
}